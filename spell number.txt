Function SpellNumber(ByVal MyNumber As Variant, Optional CurrencyType As Integer = 0) As String
    Dim Units As String
    Dim DecimalPlace As Integer
    Dim DecimalPart As String, IntegerPart As String
    Dim Place(9) As String
    Place(2) = " Thousand "
    Place(3) = " Million "
    Place(4) = " Billion "
    Place(5) = " Trillion "

    ' Convert MyNumber to a string
    MyNumber = Trim(CStr(MyNumber))
    
    ' Find the decimal place
    DecimalPlace = InStr(MyNumber, ".")
    
    ' If there is a decimal part, separate it
    If DecimalPlace > 0 Then
        DecimalPart = Mid(MyNumber, DecimalPlace + 1)
        ' Ensure it has only two decimal places
        If Len(DecimalPart) = 1 Then
            DecimalPart = DecimalPart & "0"
        ElseIf Len(DecimalPart) > 2 Then
            DecimalPart = Left(DecimalPart, 2)
        End If
        MyNumber = Left(MyNumber, DecimalPlace - 1)
    End If
    
    ' Handle the integer part (main number or currency unit)
    Dim Count As Integer
    Count = 1
    Do While MyNumber <> ""
        IntegerPart = Mid(MyNumber, Len(MyNumber) - 2)
        MyNumber = Left(MyNumber, Len(MyNumber) - 3)
        If Val(IntegerPart) > 0 Then
            Units = SpellHundreds(IntegerPart) & Place(Count) & Units
        End If
        Count = Count + 1
    Loop
    
    ' Default to just words if no currency is specified
    Select Case CurrencyType
        Case 1
            SpellNumber = Application.Trim(Units) & " Dollars"
            If DecimalPart <> "" Then
                SpellNumber = SpellNumber & " and " & SpellCents(DecimalPart) & " Cents"
            End If
        Case 2
            SpellNumber = Application.Trim(Units) & " Euros"
            If DecimalPart <> "" Then
                SpellNumber = SpellNumber & " and " & SpellCents(DecimalPart) & " Cents"
            End If
        Case 3
            SpellNumber = Application.Trim(Units) & " Pounds"
            If DecimalPart <> "" Then
                SpellNumber = SpellNumber & " and " & SpellCents(DecimalPart) & " Pence"
            End If
        Case 4
            SpellNumber = Application.Trim(Units) & " Cedis"
            If DecimalPart <> "" Then
                SpellNumber = SpellNumber & " and " & SpellCents(DecimalPart) & " Pesewas"
            End If
        Case Else
            SpellNumber = Application.Trim(Units) ' Just the number in words
    End Select
End Function

Function SpellCents(ByVal Cents As String) As String
    Dim Result As String
    If Val(Cents) = 0 Then
        Result = "Zero"
    Else
        Result = GetTens(Cents)
    End If
    SpellCents = Result
End Function

Function SpellHundreds(ByVal MyNumber As String) As String
    Dim Result As String
    If Val(MyNumber) = 0 Then Exit Function
    MyNumber = Right("000" & MyNumber, 3)
    
    If Mid(MyNumber, 1, 1) <> "0" Then
        Result = GetDigit(Mid(MyNumber, 1, 1)) & " Hundred "
    End If
    
    If Mid(MyNumber, 2, 1) <> "0" Then
        Result = Result & GetTens(Mid(MyNumber, 2))
    Else
        Result = Result & GetDigit(Mid(MyNumber, 3))
    End If
    
    SpellHundreds = Result
End Function

Function GetTens(ByVal TensText As String) As String
    Dim Result As String
    Result = ""
    If Val(Left(TensText, 1)) = 1 Then
        Select Case Val(TensText)
            Case 10: Result = "Ten"
            Case 11: Result = "Eleven"
            Case 12: Result = "Twelve"
            Case 13: Result = "Thirteen"
            Case 14: Result = "Fourteen"
            Case 15: Result = "Fifteen"
            Case 16: Result = "Sixteen"
            Case 17: Result = "Seventeen"
            Case 18: Result = "Eighteen"
            Case 19: Result = "Nineteen"
        End Select
    Else
        Select Case Val(Left(TensText, 1))
            Case 2: Result = "Twenty "
            Case 3: Result = "Thirty "
            Case 4: Result = "Forty "
            Case 5: Result = "Fifty "
            Case 6: Result = "Sixty "
            Case 7: Result = "Seventy "
            Case 8: Result = "Eighty "
            Case 9: Result = "Ninety "
        End Select
        Result = Result & GetDigit(Right(TensText, 1))
    End If
    GetTens = Result
End Function

Function GetDigit(ByVal Digit As String) As String
    Select Case Val(Digit)
        Case 1: GetDigit = "One"
        Case 2: GetDigit = "Two"
        Case 3: GetDigit = "Three"
        Case 4: GetDigit = "Four"
        Case 5: GetDigit = "Five"
        Case 6: GetDigit = "Six"
        Case 7: GetDigit = "Seven"
        Case 8: GetDigit = "Eight"
        Case 9: GetDigit = "Nine"
        Case Else: GetDigit = ""
    End Select
End Function

